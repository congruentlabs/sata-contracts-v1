{
	"id": "468b0d58137c5b8dd21ae0227bd0b456",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GovernanceExchanger.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract GovernanceExchanger is Ownable {\r\n    address public immutable governanceToken;\r\n    address public immutable utilityToken;\r\n    address private immutable holdingAccount;\r\n    uint256 private immutable endDate;\r\n\r\n    // This event is triggered whenever a call to #exchange succeeds.\r\n    event Exchanged(address account, uint256 amount);\r\n\r\n    constructor(address governanceToken_, address utilityToken_, address holdingAccount_) {\r\n        governanceToken = governanceToken_;\r\n        utilityToken = utilityToken_;\r\n        holdingAccount = holdingAccount_;\r\n\r\n        endDate = block.timestamp + 14 days;\r\n    }\r\n\r\n    function exchange(uint256 amount) external {\r\n        require(block.timestamp <= endDate, \"GovernanceExchanger::exchange: Exchange period has ended.\");\r\n        \r\n        uint256 allowance = IERC20(utilityToken).allowance(msg.sender, address(this));\r\n        \r\n        require(allowance >= amount, \"GovernanceExchanger::exchange: Token allowance too small.\");\r\n\r\n        uint256 utilityTokenBalance = IERC20(utilityToken).balanceOf(msg.sender);\r\n\r\n        require(utilityTokenBalance >= amount, \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\");\r\n        require(IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount), \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\");\r\n        require(IERC20(governanceToken).transfer(msg.sender, amount), \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\");\r\n        emit Exchanged(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawGovernance() public onlyOwner {\r\n      require(IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\");\r\n    }\r\n\r\n    function withdrawUtility() public onlyOwner {\r\n      require(IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawUtility: Withdraw failed.\");\r\n    }\r\n}"
			},
			"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GovernanceExchanger.sol": {
				"GovernanceExchanger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "governanceToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "utilityToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "holdingAccount_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Exchanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "exchange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "utilityToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawUtility",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GovernanceExchanger.sol\":184:2242  contract GovernanceExchanger is Ownable {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/GovernanceExchanger.sol\":539:808  constructor(address governanceToken_, address utilityToken_, address holdingAccount_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceExchanger.sol\":636:670  governanceToken = governanceToken_ */\n  dup1\n  dup5\n  and\n  0x80\n  mstore\n    /* \"contracts/GovernanceExchanger.sol\":681:709  utilityToken = utilityToken_ */\n  dup3\n  dup2\n  and\n  0xa0\n  mstore\n    /* \"contracts/GovernanceExchanger.sol\":720:752  holdingAccount = holdingAccount_ */\n  dup2\n  and\n  0xc0\n  mstore\n    /* \"contracts/GovernanceExchanger.sol\":775:800  block.timestamp + 14 days */\n  tag_12\n    /* \"contracts/GovernanceExchanger.sol\":775:790  block.timestamp */\n  timestamp\n    /* \"contracts/GovernanceExchanger.sol\":793:800  14 days */\n  0x127500\n    /* \"contracts/GovernanceExchanger.sol\":775:800  block.timestamp + 14 days */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/GovernanceExchanger.sol\":765:800  endDate = block.timestamp + 14 days */\n  0xe0\n  mstore\n  pop\n    /* \"contracts/GovernanceExchanger.sol\":184:2242  contract GovernanceExchanger is Ownable {... */\n  tag_18\n  swap2\n  pop\n  pop\n  jump\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:574   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_22:\n    /* \"#utility.yul\":392:432   */\n  tag_23\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_24\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":519:568   */\n  tag_25\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  dup6\n    /* \"#utility.yul\":549:567   */\n  add\n    /* \"#utility.yul\":519:568   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":509:568   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:574   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":579:804   */\ntag_13:\n    /* \"#utility.yul\":619:622   */\n  0x00\n    /* \"#utility.yul\":650:651   */\n  dup3\n    /* \"#utility.yul\":646:652   */\n  not\n    /* \"#utility.yul\":643:644   */\n  dup3\n    /* \"#utility.yul\":640:653   */\n  gt\n    /* \"#utility.yul\":637:773   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":695:705   */\n  0x4e487b71\n    /* \"#utility.yul\":690:693   */\n  0xe0\n    /* \"#utility.yul\":686:706   */\n  shl\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":676:707   */\n  mstore\n    /* \"#utility.yul\":730:734   */\n  0x11\n    /* \"#utility.yul\":727:728   */\n  0x04\n    /* \"#utility.yul\":720:735   */\n  mstore\n    /* \"#utility.yul\":758:762   */\n  0x24\n    /* \"#utility.yul\":755:756   */\n  0x00\n    /* \"#utility.yul\":748:763   */\n  revert\n    /* \"#utility.yul\":637:773   */\ntag_27:\n  pop\n    /* \"#utility.yul\":789:798   */\n  add\n  swap1\n    /* \"#utility.yul\":579:804   */\n  jump\t// out\ntag_18:\n    /* \"contracts/GovernanceExchanger.sol\":184:2242  contract GovernanceExchanger is Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n  0x00\n  assignImmutable(\"0x7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380\")\n  0x00\n  assignImmutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n  0x00\n  assignImmutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/GovernanceExchanger.sol\":184:2242  contract GovernanceExchanger is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xae86ed89\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x3971a957\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x45daa976\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x53556559\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GovernanceExchanger.sol\":1779:2011  function withdrawGovernance() public onlyOwner {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/GovernanceExchanger.sol\":2019:2239  function withdrawUtility() public onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_15\n      jump\t// in\n        /* \"contracts/GovernanceExchanger.sol\":816:1771  function exchange(uint256 amount) external {... */\n    tag_5:\n      tag_12\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_12\n      tag_21\n      jump\t// in\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_22:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GovernanceExchanger.sol\":278:315  address public immutable utilityToken */\n    tag_8:\n      tag_22\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n      dup2\n      jump\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_12\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/GovernanceExchanger.sol\":231:271  address public immutable governanceToken */\n    tag_10:\n      tag_22\n      immutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n      dup2\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1779:2011  function withdrawGovernance() public onlyOwner {... */\n    tag_13:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/GovernanceExchanger.sol\":1892:1940  IERC20(governanceToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1934:1938  this */\n      address\n        /* \"contracts/GovernanceExchanger.sol\":1892:1940  IERC20(governanceToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1850:1865  governanceToken */\n      immutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":1843:1875  IERC20(governanceToken).transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":1876:1890  holdingAccount */\n      immutable(\"0x7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380\")\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":1843:1875  IERC20(governanceToken).transfer */\n      dup4\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":1892:1925  IERC20(governanceToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1892:1940  IERC20(governanceToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/GovernanceExchanger.sol\":1843:1941  IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1440:1472   */\n      swap1\n      swap3\n      and\n        /* \"contracts/GovernanceExchanger.sol\":1843:1941  IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1482:1516   */\n      mstore\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1843:1941  IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"contracts/GovernanceExchanger.sol\":1835:2003  require(IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":1835:2003  require(IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1993:2014   */\n      mstore\n        /* \"#utility.yul\":2050:2052   */\n      0x39\n        /* \"#utility.yul\":2030:2048   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2023:2053   */\n      mstore\n        /* \"#utility.yul\":2089:2123   */\n      0x476f7665726e616e636545786368616e6765723a3a7769746864726177476f76\n        /* \"#utility.yul\":2069:2087   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2062:2124   */\n      mstore\n        /* \"#utility.yul\":2160:2187   */\n      0x65726e616e63653a205769746864726177206661696c65642e00000000000000\n        /* \"#utility.yul\":2140:2158   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2133:2188   */\n      mstore\n        /* \"#utility.yul\":2205:2224   */\n      0x84\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1835:2003  require(IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\") */\n      tag_41\n        /* \"#utility.yul\":1809:2230   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1835:2003  require(IERC20(governanceToken).transfer(holdingAccount, IERC20(governanceToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\") */\n    tag_55:\n        /* \"contracts/GovernanceExchanger.sol\":1779:2011  function withdrawGovernance() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GovernanceExchanger.sol\":2019:2239  function withdrawUtility() public onlyOwner {... */\n    tag_15:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_61:\n        /* \"contracts/GovernanceExchanger.sol\":2126:2171  IERC20(utilityToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":2165:2169  this */\n      address\n        /* \"contracts/GovernanceExchanger.sol\":2126:2171  IERC20(utilityToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":2087:2099  utilityToken */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":2080:2109  IERC20(utilityToken).transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":2110:2124  holdingAccount */\n      immutable(\"0x7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380\")\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":2080:2109  IERC20(utilityToken).transfer */\n      dup4\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":2126:2156  IERC20(utilityToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/GovernanceExchanger.sol\":2126:2171  IERC20(utilityToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_67:\n        /* \"contracts/GovernanceExchanger.sol\":2080:2172  IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1440:1472   */\n      swap1\n      swap3\n      and\n        /* \"contracts/GovernanceExchanger.sol\":2080:2172  IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1482:1516   */\n      mstore\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/GovernanceExchanger.sol\":2080:2172  IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_71:\n        /* \"contracts/GovernanceExchanger.sol\":2072:2231  require(IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawUtility: Withdraw failed.\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2437:2439   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":2072:2231  require(IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawUtility: Withdraw failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2419:2440   */\n      mstore\n        /* \"#utility.yul\":2476:2478   */\n      0x36\n        /* \"#utility.yul\":2456:2474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2449:2479   */\n      mstore\n        /* \"#utility.yul\":2515:2549   */\n      0x476f7665726e616e636545786368616e6765723a3a7769746864726177557469\n        /* \"#utility.yul\":2495:2513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2488:2550   */\n      mstore\n      shl(0x51, 0x3634ba3c9d102bb4ba34323930bb903330b4b632b217)\n        /* \"#utility.yul\":2566:2584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2559:2611   */\n      mstore\n        /* \"#utility.yul\":2628:2647   */\n      0x84\n      add\n        /* \"contracts/GovernanceExchanger.sol\":2072:2231  require(IERC20(utilityToken).transfer(holdingAccount, IERC20(utilityToken).balanceOf(address(this))), \"GovernanceExchanger::withdrawUtility: Withdraw failed.\") */\n      tag_41\n        /* \"#utility.yul\":2235:2653   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":816:1771  function exchange(uint256 amount) external {... */\n    tag_19:\n        /* \"contracts/GovernanceExchanger.sol\":897:904  endDate */\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n        /* \"contracts/GovernanceExchanger.sol\":878:893  block.timestamp */\n      timestamp\n        /* \"contracts/GovernanceExchanger.sol\":878:904  block.timestamp <= endDate */\n      gt\n      iszero\n        /* \"contracts/GovernanceExchanger.sol\":870:966  require(block.timestamp <= endDate, \"GovernanceExchanger::exchange: Exchange period has ended.\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2860:2862   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":870:966  require(block.timestamp <= endDate, \"GovernanceExchanger::exchange: Exchange period has ended.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2842:2863   */\n      mstore\n        /* \"#utility.yul\":2899:2901   */\n      0x39\n        /* \"#utility.yul\":2879:2897   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2872:2902   */\n      mstore\n        /* \"#utility.yul\":2938:2972   */\n      0x476f7665726e616e636545786368616e6765723a3a65786368616e67653a2045\n        /* \"#utility.yul\":2918:2936   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2911:2973   */\n      mstore\n        /* \"#utility.yul\":3009:3036   */\n      0x786368616e676520706572696f642068617320656e6465642e00000000000000\n        /* \"#utility.yul\":2989:3007   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2982:3037   */\n      mstore\n        /* \"#utility.yul\":3054:3073   */\n      0x84\n      add\n        /* \"contracts/GovernanceExchanger.sol\":870:966  require(block.timestamp <= endDate, \"GovernanceExchanger::exchange: Exchange period has ended.\") */\n      tag_41\n        /* \"#utility.yul\":2658:3079   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":870:966  require(block.timestamp <= endDate, \"GovernanceExchanger::exchange: Exchange period has ended.\") */\n    tag_76:\n        /* \"contracts/GovernanceExchanger.sol\":1007:1064  IERC20(utilityToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1038:1048  msg.sender */\n      caller\n        /* \"contracts/GovernanceExchanger.sol\":1007:1064  IERC20(utilityToken).allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3296:3330   */\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1058:1062  this */\n      address\n        /* \"#utility.yul\":3346:3364   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3339:3382   */\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":987:1004  uint256 allowance */\n      0x00\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":1014:1026  utilityToken */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":1007:1037  IERC20(utilityToken).allowance */\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":3231:3249   */\n      0x44\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1007:1064  IERC20(utilityToken).allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_83:\n        /* \"contracts/GovernanceExchanger.sol\":987:1064  uint256 allowance = IERC20(utilityToken).allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"contracts/GovernanceExchanger.sol\":1106:1112  amount */\n      dup2\n        /* \"contracts/GovernanceExchanger.sol\":1093:1102  allowance */\n      dup2\n        /* \"contracts/GovernanceExchanger.sol\":1093:1112  allowance >= amount */\n      lt\n      iszero\n        /* \"contracts/GovernanceExchanger.sol\":1085:1174  require(allowance >= amount, \"GovernanceExchanger::exchange: Token allowance too small.\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3595:3597   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":1085:1174  require(allowance >= amount, \"GovernanceExchanger::exchange: Token allowance too small.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3577:3598   */\n      mstore\n        /* \"#utility.yul\":3634:3636   */\n      0x39\n        /* \"#utility.yul\":3614:3632   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3607:3637   */\n      mstore\n        /* \"#utility.yul\":3673:3707   */\n      0x476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054\n        /* \"#utility.yul\":3653:3671   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3646:3708   */\n      mstore\n        /* \"#utility.yul\":3744:3771   */\n      0x6f6b656e20616c6c6f77616e636520746f6f20736d616c6c2e00000000000000\n        /* \"#utility.yul\":3724:3742   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3717:3772   */\n      mstore\n        /* \"#utility.yul\":3789:3808   */\n      0x84\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1085:1174  require(allowance >= amount, \"GovernanceExchanger::exchange: Token allowance too small.\") */\n      tag_41\n        /* \"#utility.yul\":3393:3814   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1085:1174  require(allowance >= amount, \"GovernanceExchanger::exchange: Token allowance too small.\") */\n    tag_84:\n        /* \"contracts/GovernanceExchanger.sol\":1217:1259  IERC20(utilityToken).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1248:1258  msg.sender */\n      caller\n        /* \"contracts/GovernanceExchanger.sol\":1217:1259  IERC20(utilityToken).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1187:1214  uint256 utilityTokenBalance */\n      0x00\n      swap1\n        /* \"contracts/GovernanceExchanger.sol\":1224:1236  utilityToken */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":1217:1247  IERC20(utilityToken).balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1217:1259  IERC20(utilityToken).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n        /* \"contracts/GovernanceExchanger.sol\":1187:1259  uint256 utilityTokenBalance = IERC20(utilityToken).balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/GovernanceExchanger.sol\":1303:1309  amount */\n      dup3\n        /* \"contracts/GovernanceExchanger.sol\":1280:1299  utilityTokenBalance */\n      dup2\n        /* \"contracts/GovernanceExchanger.sol\":1280:1309  utilityTokenBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/GovernanceExchanger.sol\":1272:1416  require(utilityTokenBalance >= amount, \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4021:4023   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":1272:1416  require(utilityTokenBalance >= amount, \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4003:4024   */\n      mstore\n        /* \"#utility.yul\":4060:4063   */\n      0x66\n        /* \"#utility.yul\":4040:4058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4033:4064   */\n      mstore\n        /* \"#utility.yul\":4100:4134   */\n      0x476f7665726e616e636545786368616e6765723a3a65786368616e67653a2053\n        /* \"#utility.yul\":4080:4098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4073:4135   */\n      mstore\n        /* \"#utility.yul\":4171:4205   */\n      0x656e64657227732062616c616e6365206d757374206265206772656174657220\n        /* \"#utility.yul\":4151:4169   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4144:4206   */\n      mstore\n        /* \"#utility.yul\":4243:4277   */\n      0x7468616e206f7220657175616c20746f2074686520616d6f756e742072657175\n        /* \"#utility.yul\":4222:4241   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4215:4278   */\n      mstore\n      shl(0xd1, 0x32b9ba32b217)\n        /* \"#utility.yul\":4294:4313   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":4287:4324   */\n      mstore\n        /* \"#utility.yul\":4341:4360   */\n      0xc4\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1272:1416  require(utilityTokenBalance >= amount, \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\") */\n      tag_41\n        /* \"#utility.yul\":3819:4366   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1272:1416  require(utilityTokenBalance >= amount, \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\") */\n    tag_91:\n        /* \"contracts/GovernanceExchanger.sol\":1435:1504  IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1469:1479  msg.sender */\n      caller\n        /* \"contracts/GovernanceExchanger.sol\":1435:1504  IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4611:4645   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":1481:1495  holdingAccount */\n      immutable(\"0x7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380\")\n        /* \"#utility.yul\":4681:4696   */\n      dup2\n      and\n        /* \"#utility.yul\":4661:4679   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4654:4697   */\n      mstore\n        /* \"#utility.yul\":4713:4731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4706:4740   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1442:1454  utilityToken */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n        /* \"contracts/GovernanceExchanger.sol\":1435:1468  IERC20(utilityToken).transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":4546:4564   */\n      0x64\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1435:1504  IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_98:\n        /* \"contracts/GovernanceExchanger.sol\":1427:1574  require(IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount), \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4953:4955   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":1427:1574  require(IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount), \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4935:4956   */\n      mstore\n        /* \"#utility.yul\":4992:4994   */\n      0x41\n        /* \"#utility.yul\":4972:4990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4965:4995   */\n      mstore\n        /* \"#utility.yul\":5031:5065   */\n      0x476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054\n        /* \"#utility.yul\":5011:5029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5004:5066   */\n      mstore\n        /* \"#utility.yul\":5102:5136   */\n      0x72616e73666572206f66207574696c69747920746f6b656e73206661696c6564\n        /* \"#utility.yul\":5082:5100   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5075:5137   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":5153:5172   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5146:5178   */\n      mstore\n        /* \"#utility.yul\":5195:5214   */\n      0xa4\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1427:1574  require(IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount), \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\") */\n      tag_41\n        /* \"#utility.yul\":4751:5220   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1427:1574  require(IERC20(utilityToken).transferFrom(msg.sender, holdingAccount, amount), \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\") */\n    tag_99:\n        /* \"contracts/GovernanceExchanger.sol\":1593:1645  IERC20(governanceToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1626:1636  msg.sender */\n      caller\n        /* \"contracts/GovernanceExchanger.sol\":1593:1645  IERC20(governanceToken).transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1482:1516   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1600:1615  governanceToken */\n      immutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceExchanger.sol\":1593:1625  IERC20(governanceToken).transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1593:1645  IERC20(governanceToken).transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_105:\n        /* \"contracts/GovernanceExchanger.sol\":1585:1718  require(IERC20(governanceToken).transfer(msg.sender, amount), \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5427:5429   */\n      0x20\n        /* \"contracts/GovernanceExchanger.sol\":1585:1718  require(IERC20(governanceToken).transfer(msg.sender, amount), \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5409:5430   */\n      mstore\n        /* \"#utility.yul\":5466:5468   */\n      0x44\n        /* \"#utility.yul\":5446:5464   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5439:5469   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5505:5539   */\n      0x476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054\n        /* \"#utility.yul\":5485:5503   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5478:5540   */\n      mstore\n        /* \"#utility.yul\":5576:5610   */\n      0x72616e73666572206f6620676f7665726e616e636520746f6b656e7320666169\n        /* \"#utility.yul\":5556:5574   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5549:5611   */\n      mstore\n      shl(0xe1, 0x3632b217)\n        /* \"#utility.yul\":5627:5646   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5620:5655   */\n      mstore\n        /* \"#utility.yul\":5672:5691   */\n      0xa4\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1585:1718  require(IERC20(governanceToken).transfer(msg.sender, amount), \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\") */\n      tag_41\n        /* \"#utility.yul\":5225:5697   */\n      jump\n        /* \"contracts/GovernanceExchanger.sol\":1585:1718  require(IERC20(governanceToken).transfer(msg.sender, amount), \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\") */\n    tag_106:\n        /* \"contracts/GovernanceExchanger.sol\":1734:1763  Exchanged(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/GovernanceExchanger.sol\":1744:1754  msg.sender */\n      caller\n        /* \"#utility.yul\":1422:1473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1504:1506   */\n      0x20\n        /* \"#utility.yul\":1489:1507   */\n      dup2\n      add\n        /* \"#utility.yul\":1482:1516   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/GovernanceExchanger.sol\":1734:1763  Exchanged(msg.sender, amount) */\n      0x6ea412b125ed242bc34c304877264761547306c2429c03d7fd1b477aa61a3f5d\n      swap2\n        /* \"#utility.yul\":1395:1413   */\n      add\n        /* \"contracts/GovernanceExchanger.sol\":1734:1763  Exchanged(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GovernanceExchanger.sol\":859:1771  {... */\n      pop\n      pop\n        /* \"contracts/GovernanceExchanger.sol\":816:1771  function exchange(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_113:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_55\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_117\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5904:5906   */\n      0x20\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5886:5907   */\n      mstore\n        /* \"#utility.yul\":5943:5945   */\n      0x26\n        /* \"#utility.yul\":5923:5941   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5916:5946   */\n      mstore\n        /* \"#utility.yul\":5982:6016   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5962:5980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5955:6017   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6033:6051   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6026:6062   */\n      mstore\n        /* \"#utility.yul\":6079:6098   */\n      0x84\n      add\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n        /* \"#utility.yul\":5702:6104   */\n      jump\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_125:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_117\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_117:\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"contracts/openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_18:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_133:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":407:693   */\n    tag_31:\n        /* \"#utility.yul\":466:472   */\n      0x00\n        /* \"#utility.yul\":519:521   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup3\n        /* \"#utility.yul\":498:505   */\n      dup5\n        /* \"#utility.yul\":494:517   */\n      sub\n        /* \"#utility.yul\":490:522   */\n      slt\n        /* \"#utility.yul\":487:539   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":532:533   */\n      dup1\n        /* \"#utility.yul\":525:537   */\n      revert\n        /* \"#utility.yul\":487:539   */\n    tag_136:\n        /* \"#utility.yul\":561:584   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":613:644   */\n      dup2\n      and\n        /* \"#utility.yul\":603:645   */\n      dup2\n      eq\n        /* \"#utility.yul\":593:663   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":659:660   */\n      0x00\n        /* \"#utility.yul\":656:657   */\n      dup1\n        /* \"#utility.yul\":649:661   */\n      revert\n        /* \"#utility.yul\":593:663   */\n    tag_137:\n        /* \"#utility.yul\":682:687   */\n      swap4\n        /* \"#utility.yul\":407:693   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:1054   */\n    tag_42:\n        /* \"#utility.yul\":900:902   */\n      0x20\n        /* \"#utility.yul\":882:903   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":919:937   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":912:942   */\n      mstore\n        /* \"#utility.yul\":978:1012   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":973:975   */\n      0x40\n        /* \"#utility.yul\":958:976   */\n      dup3\n      add\n        /* \"#utility.yul\":951:1013   */\n      mstore\n        /* \"#utility.yul\":1045:1047   */\n      0x60\n        /* \"#utility.yul\":1030:1048   */\n      add\n      swap1\n        /* \"#utility.yul\":698:1054   */\n      jump\t// out\n        /* \"#utility.yul\":1059:1243   */\n    tag_48:\n        /* \"#utility.yul\":1129:1135   */\n      0x00\n        /* \"#utility.yul\":1182:1184   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1161:1168   */\n      dup5\n        /* \"#utility.yul\":1157:1180   */\n      sub\n        /* \"#utility.yul\":1153:1185   */\n      slt\n        /* \"#utility.yul\":1150:1202   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1198:1199   */\n      0x00\n        /* \"#utility.yul\":1195:1196   */\n      dup1\n        /* \"#utility.yul\":1188:1200   */\n      revert\n        /* \"#utility.yul\":1150:1202   */\n    tag_140:\n      pop\n        /* \"#utility.yul\":1221:1237   */\n      mload\n      swap2\n        /* \"#utility.yul\":1059:1243   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1527:1804   */\n    tag_54:\n        /* \"#utility.yul\":1594:1600   */\n      0x00\n        /* \"#utility.yul\":1647:1649   */\n      0x20\n        /* \"#utility.yul\":1635:1644   */\n      dup3\n        /* \"#utility.yul\":1626:1633   */\n      dup5\n        /* \"#utility.yul\":1622:1645   */\n      sub\n        /* \"#utility.yul\":1618:1650   */\n      slt\n        /* \"#utility.yul\":1615:1667   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1663:1664   */\n      0x00\n        /* \"#utility.yul\":1660:1661   */\n      dup1\n        /* \"#utility.yul\":1653:1665   */\n      revert\n        /* \"#utility.yul\":1615:1667   */\n    tag_143:\n        /* \"#utility.yul\":1695:1704   */\n      dup2\n        /* \"#utility.yul\":1689:1705   */\n      mload\n        /* \"#utility.yul\":1748:1753   */\n      dup1\n        /* \"#utility.yul\":1741:1754   */\n      iszero\n        /* \"#utility.yul\":1734:1755   */\n      iszero\n        /* \"#utility.yul\":1727:1732   */\n      dup2\n        /* \"#utility.yul\":1724:1756   */\n      eq\n        /* \"#utility.yul\":1714:1774   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1767:1768   */\n      dup1\n        /* \"#utility.yul\":1760:1772   */\n      revert\n\n    auxdata: 0xa2646970667358221220f4e018b10d1090ad7c4ec6ae6d3b76acb8b3149ddfc7146b78e06169662c115d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_286": {
									"entryPoint": 107,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"checked_add_t_uint256": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:806:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:4"
															},
															"nodeType": "YulIf",
															"src": "115:70:4"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:32:4"
															},
															"nodeType": "YulIf",
															"src": "321:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:40:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "441:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:49:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "509:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "519:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:49:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "261:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "272:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "292:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "300:6:4",
														"type": ""
													}
												],
												"src": "196:378:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "662:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "690:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "695:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "686:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "686:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "676:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "676:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "676:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "755:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "748:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "748:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "643:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "650:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "640:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:13:4"
															},
															"nodeType": "YulIf",
															"src": "637:136:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "782:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "793:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "796:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "789:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "782:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "610:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "613:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "619:3:4",
														"type": ""
													}
												],
												"src": "579:225:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61010060405234801561001157600080fd5b50604051610ddb380380610ddb833981016040819052610030916100d7565b6100393361006b565b6001600160a01b0380841660805282811660a052811660c05261005f426212750061011a565b60e05250610140915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d257600080fd5b919050565b6000806000606084860312156100ec57600080fd5b6100f5846100bb565b9250610103602085016100bb565b9150610111604085016100bb565b90509250925092565b6000821982111561013b57634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c05160e051610c2b6101b060003960006104c40152600081816101bd0152818161037c01526107b601526000818160e80152818161034b015281816105760152818161067901526107e50152600081816101220152818161018c01526108ea0152610c2b6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba578063ae86ed89146100e3578063f2fde38b1461010a578063f96dae0a1461011d57600080fd5b80633971a9571461008d57806345daa97614610097578063535565591461009f578063715018a6146100b2575b600080fd5b610095610144565b005b61009561030c565b6100956100ad366004610b3c565b6104c2565b610095610a1d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b610095610118366004610b55565b610a51565b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101775760405162461bcd60e51b815260040161016e90610b85565b60405180910390fd5b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610bba565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610bd3565b61030a5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a7769746864726177476f7660448201527f65726e616e63653a205769746864726177206661696c65642e00000000000000606482015260840161016e565b565b6000546001600160a01b031633146103365760405162461bcd60e51b815260040161016e90610b85565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610bba565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610bd3565b61030a5760405162461bcd60e51b815260206004820152603660248201527f476f7665726e616e636545786368616e6765723a3a77697468647261775574696044820152753634ba3c9d102bb4ba34323930bb903330b4b632b21760511b606482015260840161016e565b7f00000000000000000000000000000000000000000000000000000000000000004211156105585760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a204560448201527f786368616e676520706572696f642068617320656e6465642e00000000000000606482015260840161016e565b604051636eb1769f60e11b81523360048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190610bba565b9050818110156106615760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205460448201527f6f6b656e20616c6c6f77616e636520746f6f20736d616c6c2e00000000000000606482015260840161016e565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610bba565b9050828110156107995760405162461bcd60e51b815260206004820152606660248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205360448201527f656e64657227732062616c616e6365206d75737420626520677265617465722060648201527f7468616e206f7220657175616c20746f2074686520616d6f756e74207265717560848201526532b9ba32b21760d11b60a482015260c40161016e565b6040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af115801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190610bd3565b6108ce5760405162461bcd60e51b815260206004820152604160248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205460448201527f72616e73666572206f66207574696c69747920746f6b656e73206661696c65646064820152601760f91b608482015260a40161016e565b60405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610bd3565b6109df5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054908201527f72616e73666572206f6620676f7665726e616e636520746f6b656e73206661696064820152633632b21760e11b608482015260a40161016e565b60408051338152602081018590527f6ea412b125ed242bc34c304877264761547306c2429c03d7fd1b477aa61a3f5d910160405180910390a1505050565b6000546001600160a01b03163314610a475760405162461bcd60e51b815260040161016e90610b85565b61030a6000610aec565b6000546001600160a01b03163314610a7b5760405162461bcd60e51b815260040161016e90610b85565b6001600160a01b038116610ae05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161016e565b610ae981610aec565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b4e57600080fd5b5035919050565b600060208284031215610b6757600080fd5b81356001600160a01b0381168114610b7e57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bcc57600080fd5b5051919050565b600060208284031215610be557600080fd5b81518015158114610b7e57600080fdfea2646970667358221220f4e018b10d1090ad7c4ec6ae6d3b76acb8b3149ddfc7146b78e06169662c115d64736f6c634300080d0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDDB CODESIZE SUB DUP1 PUSH2 0xDDB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x39 CALLER PUSH2 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x80 MSTORE DUP3 DUP2 AND PUSH1 0xA0 MSTORE DUP2 AND PUSH1 0xC0 MSTORE PUSH2 0x5F TIMESTAMP PUSH3 0x127500 PUSH2 0x11A JUMP JUMPDEST PUSH1 0xE0 MSTORE POP PUSH2 0x140 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 DUP5 PUSH2 0xBB JUMP JUMPDEST SWAP3 POP PUSH2 0x103 PUSH1 0x20 DUP6 ADD PUSH2 0xBB JUMP JUMPDEST SWAP2 POP PUSH2 0x111 PUSH1 0x40 DUP6 ADD PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0xC2B PUSH2 0x1B0 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x4C4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1BD ADD MSTORE DUP2 DUP2 PUSH2 0x37C ADD MSTORE PUSH2 0x7B6 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xE8 ADD MSTORE DUP2 DUP2 PUSH2 0x34B ADD MSTORE DUP2 DUP2 PUSH2 0x576 ADD MSTORE DUP2 DUP2 PUSH2 0x679 ADD MSTORE PUSH2 0x7E5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x122 ADD MSTORE DUP2 DUP2 PUSH2 0x18C ADD MSTORE PUSH2 0x8EA ADD MSTORE PUSH2 0xC2B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xAE86ED89 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3971A957 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x45DAA976 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x53556559 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x95 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH32 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A7769746864726177476F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726E616E63653A205769746864726177206661696C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH32 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A7769746864726177557469 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3634BA3C9D102BB4BA34323930BB903330B4B632B217 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2045 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x786368616E676520706572696F642068617320656E6465642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6B656E20616C6C6F77616E636520746F6F20736D616C6C2E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2053 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64657227732062616C616E6365206D757374206265206772656174657220 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F2074686520616D6F756E742072657175 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x32B9BA32B217 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72616E73666572206F66207574696C69747920746F6B656E73206661696C6564 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 SWAP1 DUP3 ADD MSTORE PUSH32 0x72616E73666572206F6620676F7665726E616E636520746F6B656E7320666169 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3632B217 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6EA412B125ED242BC34C304877264761547306C2429C03D7FD1B477AA61A3F5D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x30A PUSH1 0x0 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0xAEC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xE0 XOR 0xB1 0xD LT SWAP1 0xAD PUSH29 0x4EC6AE6D3B76ACB8B3149DDFC7146B78E06169662C115D64736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "184:2058:0:-:0;;;539:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:1;719:10:3;921:18:1;:32::i;:::-;-1:-1:-1;;;;;636:34:0;;;;;681:28;;;;;720:32;;;;775:25;:15;793:7;775:25;:::i;:::-;765:35;;-1:-1:-1;184:2058:0;;-1:-1:-1;;184:2058:0;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:4:-;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:225::-;619:3;650:1;646:6;643:1;640:13;637:136;;;695:10;690:3;686:20;683:1;676:31;730:4;727:1;720:15;758:4;755:1;748:15;637:136;-1:-1:-1;789:9:4;;579:225::o;:::-;184:2058:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_286": {
									"entryPoint": 2796,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exchange_131": {
									"entryPoint": 1218,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@governanceToken_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_243": {
									"entryPoint": 2589,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_266": {
									"entryPoint": 2641,
									"id": 266,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@utilityToken_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawGovernance_156": {
									"entryPoint": 324,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUtility_181": {
									"entryPoint": 780,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1978c4d2d1c163c1d7217d521c2059a210c485469b8adb9d498912af738ef846__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89b47b1188a905baa9714ed0c529ed28ab596ebead4351020b5b8f081506a32a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5ab1db43b51bed1573d7acaccaa920a3c467fa0c2c2f0a51bcabfdf332c3109__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bbca032c81e656114920bebf541dfdf0acb88cf41d0859105f44bf60b0753ee1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bff9faa4a6496ad5e37150c811e025b935c3c179054796cc0058ac8f679449d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbb8362d043b12019e6e4a5f50048f4bb20d95a35d2ee15aa80e85fc66f43c28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f897ed845dce9d54746ce5d1a81ef106dc440a14d2eb5081ae5b9c66555a1db0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6106:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "383:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "392:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:4",
														"type": ""
													}
												],
												"src": "199:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "477:216:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "523:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "535:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "525:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "525:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "525:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "498:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "494:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "494:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:32:4"
															},
															"nodeType": "YulIf",
															"src": "487:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "548:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "561:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "561:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "552:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "647:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "659:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "649:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "649:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "649:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "606:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "617:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "632:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "637:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "628:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "628:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "641:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "624:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "624:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "613:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "603:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "596:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:50:4"
															},
															"nodeType": "YulIf",
															"src": "593:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "672:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "682:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "672:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "443:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "454:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "466:6:4",
														"type": ""
													}
												],
												"src": "407:286:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "889:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "882:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "934:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "919:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "912:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "973:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "958:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "958:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "978:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "951:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1022:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1034:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1045:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1022:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "849:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "863:4:4",
														"type": ""
													}
												],
												"src": "698:356:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1186:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1195:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1198:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1188:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1188:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1188:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1161:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1170:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1157:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1157:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1182:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:32:4"
															},
															"nodeType": "YulIf",
															"src": "1150:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1227:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1221:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1106:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1117:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1129:6:4",
														"type": ""
													}
												],
												"src": "1059:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1377:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1387:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1399:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1410:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1387:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1429:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1444:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1460:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1465:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1456:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1456:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1469:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1452:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1422:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1493:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1504:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1482:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1482:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1349:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1357:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1368:4:4",
														"type": ""
													}
												],
												"src": "1248:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:199:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1651:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1660:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1663:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1653:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1653:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1626:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1635:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1647:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:32:4"
															},
															"nodeType": "YulIf",
															"src": "1615:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1676:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1695:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1689:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1680:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1758:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1770:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1760:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1760:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1760:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1727:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1748:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1741:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1741:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1734:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1734:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1724:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:40:4"
															},
															"nodeType": "YulIf",
															"src": "1714:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1783:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1793:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1571:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1582:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1594:6:4",
														"type": ""
													}
												],
												"src": "1527:277:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1983:247:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1993:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2034:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2045:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:2:4",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2023:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2084:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2069:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a7769746864726177476f76",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2089:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::withdrawGov"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2062:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2144:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2155:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:18:4"
																	},
																	{
																		"hexValue": "65726e616e63653a205769746864726177206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2160:27:4",
																		"type": "",
																		"value": "ernance: Withdraw failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2133:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2197:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2209:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2205:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2197:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1978c4d2d1c163c1d7217d521c2059a210c485469b8adb9d498912af738ef846__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1960:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1974:4:4",
														"type": ""
													}
												],
												"src": "1809:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2409:244:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2426:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2419:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2471:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2456:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2456:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:4",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2499:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2510:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2495:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a7769746864726177557469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2515:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::withdrawUti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2488:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2488:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2570:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2581:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2566:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:18:4"
																	},
																	{
																		"hexValue": "6c6974793a205769746864726177206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2586:24:4",
																		"type": "",
																		"value": "lity: Withdraw failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2620:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2632:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2628:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2620:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f897ed845dce9d54746ce5d1a81ef106dc440a14d2eb5081ae5b9c66555a1db0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2386:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2400:4:4",
														"type": ""
													}
												],
												"src": "2235:418:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2832:247:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2842:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2883:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2894:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2879:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2879:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:4",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2922:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2933:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2918:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2045",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2938:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::exchange: E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2911:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:18:4"
																	},
																	{
																		"hexValue": "786368616e676520706572696f642068617320656e6465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3009:27:4",
																		"type": "",
																		"value": "xchange period has ended."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3046:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3058:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3046:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5ab1db43b51bed1573d7acaccaa920a3c467fa0c2c2f0a51bcabfdf332c3109__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2809:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2823:4:4",
														"type": ""
													}
												],
												"src": "2658:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:175:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3223:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3235:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3246:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3223:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3258:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3276:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3281:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3272:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3272:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3268:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3262:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3303:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3318:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3326:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3314:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3296:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3296:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3350:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3361:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3346:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3346:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3370:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3378:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3366:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3339:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3339:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3174:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3185:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3193:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3204:4:4",
														"type": ""
													}
												],
												"src": "3084:304:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:247:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3584:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3577:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3577:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3618:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3629:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3614:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3614:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3634:2:4",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3607:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3657:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3668:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3653:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3673:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::exchange: T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3646:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3739:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3724:18:4"
																	},
																	{
																		"hexValue": "6f6b656e20616c6c6f77616e636520746f6f20736d616c6c2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3744:27:4",
																		"type": "",
																		"value": "oken allowance too small."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3717:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3781:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3789:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3781:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89b47b1188a905baa9714ed0c529ed28ab596ebead4351020b5b8f081506a32a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3544:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3558:4:4",
														"type": ""
													}
												],
												"src": "3393:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:373:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4003:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:3:4",
																		"type": "",
																		"value": "102"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4084:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4095:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4080:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4100:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::exchange: S"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4073:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4155:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4166:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:18:4"
																	},
																	{
																		"hexValue": "656e64657227732062616c616e6365206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4171:34:4",
																		"type": "",
																		"value": "ender's balance must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4144:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4144:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4226:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4237:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:19:4"
																	},
																	{
																		"hexValue": "7468616e206f7220657175616c20746f2074686520616d6f756e742072657175",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4243:34:4",
																		"type": "",
																		"value": "than or equal to the amount requ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:63:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4215:63:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4298:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4309:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4294:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4294:19:4"
																	},
																	{
																		"hexValue": "65737465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4315:8:4",
																		"type": "",
																		"value": "ested."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4287:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4287:37:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4333:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4345:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4356:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4333:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bff9faa4a6496ad5e37150c811e025b935c3c179054796cc0058ac8f679449d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3970:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3984:4:4",
														"type": ""
													}
												],
												"src": "3819:547:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:218:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4538:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4550:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4546:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4538:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4573:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4591:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4596:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4600:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4577:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4618:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4641:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4629:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4629:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4676:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4685:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4693:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4654:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4717:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4728:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4713:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4733:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4481:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4492:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4500:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4508:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4519:4:4",
														"type": ""
													}
												],
												"src": "4371:375:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4925:295:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4942:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4935:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4976:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4987:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4972:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4972:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:4",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5031:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::exchange: T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5086:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5097:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5082:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5082:18:4"
																	},
																	{
																		"hexValue": "72616e73666572206f66207574696c69747920746f6b656e73206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5102:34:4",
																		"type": "",
																		"value": "ransfer of utility tokens failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5157:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5168:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5153:19:4"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5174:3:4",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5146:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5187:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5199:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5210:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5187:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbb8362d043b12019e6e4a5f50048f4bb20d95a35d2ee15aa80e85fc66f43c28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4902:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4916:4:4",
														"type": ""
													}
												],
												"src": "4751:469:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5399:298:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5416:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5427:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5450:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5461:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5446:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5446:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5466:2:4",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5439:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5439:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5439:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5489:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5500:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5485:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:18:4"
																	},
																	{
																		"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5505:34:4",
																		"type": "",
																		"value": "GovernanceExchanger::exchange: T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5478:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5571:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5556:18:4"
																	},
																	{
																		"hexValue": "72616e73666572206f6620676f7665726e616e636520746f6b656e7320666169",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5576:34:4",
																		"type": "",
																		"value": "ransfer of governance tokens fai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5631:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5642:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5627:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5627:19:4"
																	},
																	{
																		"hexValue": "6c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5648:6:4",
																		"type": "",
																		"value": "led."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5620:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5664:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5676:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5687:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5672:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5664:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bbca032c81e656114920bebf541dfdf0acb88cf41d0859105f44bf60b0753ee1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5376:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5390:4:4",
														"type": ""
													}
												],
												"src": "5225:472:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5876:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5893:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5943:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5966:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5962:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5982:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6037:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6048:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6053:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6026:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6071:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6083:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6094:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6071:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5853:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5867:4:4",
														"type": ""
													}
												],
												"src": "5702:402:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1978c4d2d1c163c1d7217d521c2059a210c485469b8adb9d498912af738ef846__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"GovernanceExchanger::withdrawGov\")\n        mstore(add(headStart, 96), \"ernance: Withdraw failed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f897ed845dce9d54746ce5d1a81ef106dc440a14d2eb5081ae5b9c66555a1db0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"GovernanceExchanger::withdrawUti\")\n        mstore(add(headStart, 96), \"lity: Withdraw failed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a5ab1db43b51bed1573d7acaccaa920a3c467fa0c2c2f0a51bcabfdf332c3109__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"GovernanceExchanger::exchange: E\")\n        mstore(add(headStart, 96), \"xchange period has ended.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_89b47b1188a905baa9714ed0c529ed28ab596ebead4351020b5b8f081506a32a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"GovernanceExchanger::exchange: T\")\n        mstore(add(headStart, 96), \"oken allowance too small.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bff9faa4a6496ad5e37150c811e025b935c3c179054796cc0058ac8f679449d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 102)\n        mstore(add(headStart, 64), \"GovernanceExchanger::exchange: S\")\n        mstore(add(headStart, 96), \"ender's balance must be greater \")\n        mstore(add(headStart, 128), \"than or equal to the amount requ\")\n        mstore(add(headStart, 160), \"ested.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_dbb8362d043b12019e6e4a5f50048f4bb20d95a35d2ee15aa80e85fc66f43c28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"GovernanceExchanger::exchange: T\")\n        mstore(add(headStart, 96), \"ransfer of utility tokens failed\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_bbca032c81e656114920bebf541dfdf0acb88cf41d0859105f44bf60b0753ee1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"GovernanceExchanger::exchange: T\")\n        mstore(add(headStart, 96), \"ransfer of governance tokens fai\")\n        mstore(add(headStart, 128), \"led.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"7": [
									{
										"length": 32,
										"start": 290
									},
									{
										"length": 32,
										"start": 396
									},
									{
										"length": 32,
										"start": 2282
									}
								],
								"9": [
									{
										"length": 32,
										"start": 232
									},
									{
										"length": 32,
										"start": 843
									},
									{
										"length": 32,
										"start": 1398
									},
									{
										"length": 32,
										"start": 1657
									},
									{
										"length": 32,
										"start": 2021
									}
								],
								"11": [
									{
										"length": 32,
										"start": 445
									},
									{
										"length": 32,
										"start": 892
									},
									{
										"length": 32,
										"start": 1974
									}
								],
								"13": [
									{
										"length": 32,
										"start": 1220
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba578063ae86ed89146100e3578063f2fde38b1461010a578063f96dae0a1461011d57600080fd5b80633971a9571461008d57806345daa97614610097578063535565591461009f578063715018a6146100b2575b600080fd5b610095610144565b005b61009561030c565b6100956100ad366004610b3c565b6104c2565b610095610a1d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b610095610118366004610b55565b610a51565b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101775760405162461bcd60e51b815260040161016e90610b85565b60405180910390fd5b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610bba565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610bd3565b61030a5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a7769746864726177476f7660448201527f65726e616e63653a205769746864726177206661696c65642e00000000000000606482015260840161016e565b565b6000546001600160a01b031633146103365760405162461bcd60e51b815260040161016e90610b85565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610bba565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610bd3565b61030a5760405162461bcd60e51b815260206004820152603660248201527f476f7665726e616e636545786368616e6765723a3a77697468647261775574696044820152753634ba3c9d102bb4ba34323930bb903330b4b632b21760511b606482015260840161016e565b7f00000000000000000000000000000000000000000000000000000000000000004211156105585760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a204560448201527f786368616e676520706572696f642068617320656e6465642e00000000000000606482015260840161016e565b604051636eb1769f60e11b81523360048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190610bba565b9050818110156106615760405162461bcd60e51b815260206004820152603960248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205460448201527f6f6b656e20616c6c6f77616e636520746f6f20736d616c6c2e00000000000000606482015260840161016e565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610bba565b9050828110156107995760405162461bcd60e51b815260206004820152606660248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205360448201527f656e64657227732062616c616e6365206d75737420626520677265617465722060648201527f7468616e206f7220657175616c20746f2074686520616d6f756e74207265717560848201526532b9ba32b21760d11b60a482015260c40161016e565b6040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af115801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190610bd3565b6108ce5760405162461bcd60e51b815260206004820152604160248201527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a205460448201527f72616e73666572206f66207574696c69747920746f6b656e73206661696c65646064820152601760f91b608482015260a40161016e565b60405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610bd3565b6109df5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e616e636545786368616e6765723a3a65786368616e67653a2054908201527f72616e73666572206f6620676f7665726e616e636520746f6b656e73206661696064820152633632b21760e11b608482015260a40161016e565b60408051338152602081018590527f6ea412b125ed242bc34c304877264761547306c2429c03d7fd1b477aa61a3f5d910160405180910390a1505050565b6000546001600160a01b03163314610a475760405162461bcd60e51b815260040161016e90610b85565b61030a6000610aec565b6000546001600160a01b03163314610a7b5760405162461bcd60e51b815260040161016e90610b85565b6001600160a01b038116610ae05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161016e565b610ae981610aec565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b4e57600080fd5b5035919050565b600060208284031215610b6757600080fd5b81356001600160a01b0381168114610b7e57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bcc57600080fd5b5051919050565b600060208284031215610be557600080fd5b81518015158114610b7e57600080fdfea2646970667358221220f4e018b10d1090ad7c4ec6ae6d3b76acb8b3149ddfc7146b78e06169662c115d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xAE86ED89 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3971A957 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x45DAA976 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x53556559 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x95 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH32 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A7769746864726177476F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726E616E63653A205769746864726177206661696C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH32 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A7769746864726177557469 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3634BA3C9D102BB4BA34323930BB903330B4B632B217 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2045 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x786368616E676520706572696F642068617320656E6465642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6B656E20616C6C6F77616E636520746F6F20736D616C6C2E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2053 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64657227732062616C616E6365206D757374206265206772656174657220 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F2074686520616D6F756E742072657175 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x32B9BA32B217 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72616E73666572206F66207574696C69747920746F6B656E73206661696C6564 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054 SWAP1 DUP3 ADD MSTORE PUSH32 0x72616E73666572206F6620676F7665726E616E636520746F6B656E7320666169 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3632B217 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6EA412B125ED242BC34C304877264761547306C2429C03D7FD1B477AA61A3F5D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x30A PUSH1 0x0 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0xAEC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xE0 XOR 0xB1 0xD LT SWAP1 0xAD PUSH29 0x4EC6AE6D3B76ACB8B3149DDFC7146B78E06169662C115D64736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "184:2058:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:232;;;:::i;:::-;;2019:220;;;:::i;816:955::-;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;;-1:-1:-1;;;;;363:32:4;;;345:51;;333:2;318:18;1036:85:1;;;;;;;278:37:0;;;;;1918:198:1;;;;;;:::i;:::-;;:::i;231:40:0:-;;;;;1779:232;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;1892:48:0::1;::::0;-1:-1:-1;;;1892:48:0;;1934:4:::1;1892:48;::::0;::::1;345:51:4::0;1850:15:0::1;-1:-1:-1::0;;;;;1843:32:0::1;::::0;::::1;::::0;1876:14:::1;::::0;1843:32;;1892:33:::1;::::0;318:18:4;;1892:48:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:98;::::0;-1:-1:-1;;;;;;1843:98:0::1;::::0;;;;;;-1:-1:-1;;;;;1440:32:4;;;1843:98:0::1;::::0;::::1;1422:51:4::0;1489:18;;;1482:34;1395:18;;1843:98:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1835:168;;;::::0;-1:-1:-1;;;1835:168:0;;2011:2:4;1835:168:0::1;::::0;::::1;1993:21:4::0;2050:2;2030:18;;;2023:30;2089:34;2069:18;;;2062:62;2160:27;2140:18;;;2133:55;2205:19;;1835:168:0::1;1809:421:4::0;1835:168:0::1;1779:232::o:0;2019:220::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2126:45:0::1;::::0;-1:-1:-1;;;2126:45:0;;2165:4:::1;2126:45;::::0;::::1;345:51:4::0;2087:12:0::1;-1:-1:-1::0;;;;;2080:29:0::1;::::0;::::1;::::0;2110:14:::1;::::0;2080:29;;2126:30:::1;::::0;318:18:4;;2126:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2080:92;::::0;-1:-1:-1;;;;;;2080:92:0::1;::::0;;;;;;-1:-1:-1;;;;;1440:32:4;;;2080:92:0::1;::::0;::::1;1422:51:4::0;1489:18;;;1482:34;1395:18;;2080:92:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2072:159;;;::::0;-1:-1:-1;;;2072:159:0;;2437:2:4;2072:159:0::1;::::0;::::1;2419:21:4::0;2476:2;2456:18;;;2449:30;2515:34;2495:18;;;2488:62;-1:-1:-1;;;2566:18:4;;;2559:52;2628:19;;2072:159:0::1;2235:418:4::0;816:955:0;897:7;878:15;:26;;870:96;;;;-1:-1:-1;;;870:96:0;;2860:2:4;870:96:0;;;2842:21:4;2899:2;2879:18;;;2872:30;2938:34;2918:18;;;2911:62;3009:27;2989:18;;;2982:55;3054:19;;870:96:0;2658:421:4;870:96:0;1007:57;;-1:-1:-1;;;1007:57:0;;1038:10;1007:57;;;3296:34:4;1058:4:0;3346:18:4;;;3339:43;987:17:0;;1014:12;-1:-1:-1;;;;;1007:30:0;;;;3231:18:4;;1007:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;987:77;;1106:6;1093:9;:19;;1085:89;;;;-1:-1:-1;;;1085:89:0;;3595:2:4;1085:89:0;;;3577:21:4;3634:2;3614:18;;;3607:30;3673:34;3653:18;;;3646:62;3744:27;3724:18;;;3717:55;3789:19;;1085:89:0;3393:421:4;1085:89:0;1217:42;;-1:-1:-1;;;1217:42:0;;1248:10;1217:42;;;345:51:4;1187:27:0;;1224:12;-1:-1:-1;;;;;1217:30:0;;;;318:18:4;;1217:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1187:72;;1303:6;1280:19;:29;;1272:144;;;;-1:-1:-1;;;1272:144:0;;4021:2:4;1272:144:0;;;4003:21:4;4060:3;4040:18;;;4033:31;4100:34;4080:18;;;4073:62;4171:34;4151:18;;;4144:62;4243:34;4222:19;;;4215:63;-1:-1:-1;;;4294:19:4;;;4287:37;4341:19;;1272:144:0;3819:547:4;1272:144:0;1435:69;;-1:-1:-1;;;1435:69:0;;1469:10;1435:69;;;4611:34:4;-1:-1:-1;;;;;1481:14:0;4681:15:4;;4661:18;;;4654:43;4713:18;;;4706:34;;;1442:12:0;1435:33;;;;4546:18:4;;1435:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1427:147;;;;-1:-1:-1;;;1427:147:0;;4953:2:4;1427:147:0;;;4935:21:4;4992:2;4972:18;;;4965:30;5031:34;5011:18;;;5004:62;5102:34;5082:18;;;5075:62;-1:-1:-1;;;5153:19:4;;;5146:32;5195:19;;1427:147:0;4751:469:4;1427:147:0;1593:52;;-1:-1:-1;;;1593:52:0;;1626:10;1593:52;;;1422:51:4;1489:18;;;1482:34;;;1600:15:0;-1:-1:-1;;;;;1593:32:0;;;;1395:18:4;;1593:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1585:133;;;;-1:-1:-1;;;1585:133:0;;5427:2:4;1585:133:0;;;5409:21:4;5466:2;5446:18;;;5439:30;;;5505:34;5485:18;;;5478:62;5576:34;5556:18;;;5549:62;-1:-1:-1;;;5627:19:4;;;5620:35;5672:19;;1585:133:0;5225:472:4;1585:133:0;1734:29;;;1744:10;1422:51:4;;1504:2;1489:18;;1482:34;;;1734:29:0;;1395:18:4;1734:29:0;;;;;;;859:912;;816:955;:::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1918:198::-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:3;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;5904:2:4;1998:73:1::1;::::0;::::1;5886:21:4::0;5943:2;5923:18;;;5916:30;5982:34;5962:18;;;5955:62;-1:-1:-1;;;6033:18:4;;;6026:36;6079:19;;1998:73:1::1;5702:402:4::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:180:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:4;;14:180;-1:-1:-1;14:180:4:o;407:286::-;466:6;519:2;507:9;498:7;494:23;490:32;487:52;;;535:1;532;525:12;487:52;561:23;;-1:-1:-1;;;;;613:31:4;;603:42;;593:70;;659:1;656;649:12;593:70;682:5;407:286;-1:-1:-1;;;407:286:4:o;698:356::-;900:2;882:21;;;919:18;;;912:30;978:34;973:2;958:18;;951:62;1045:2;1030:18;;698:356::o;1059:184::-;1129:6;1182:2;1170:9;1161:7;1157:23;1153:32;1150:52;;;1198:1;1195;1188:12;1150:52;-1:-1:-1;1221:16:4;;1059:184;-1:-1:-1;1059:184:4:o;1527:277::-;1594:6;1647:2;1635:9;1626:7;1622:23;1618:32;1615:52;;;1663:1;1660;1653:12;1615:52;1695:9;1689:16;1748:5;1741:13;1734:21;1727:5;1724:32;1714:60;;1770:1;1767;1760:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "623000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"exchange(uint256)": "infinite",
								"governanceToken()": "infinite",
								"owner()": "2308",
								"renounceOwnership()": "28181",
								"transferOwnership(address)": "28318",
								"utilityToken()": "infinite",
								"withdrawGovernance()": "infinite",
								"withdrawUtility()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 539,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 539,
									"end": 808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 636,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 636,
									"end": 670,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 636,
									"end": 670,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 636,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 709,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 709,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 681,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 681,
									"end": 709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 720,
									"end": 752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 720,
									"end": 752,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 720,
									"end": 752,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 720,
									"end": 752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 775,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 775,
									"end": 790,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 793,
									"end": 800,
									"name": "PUSH",
									"source": 0,
									"value": "127500"
								},
								{
									"begin": 775,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 775,
									"end": 800,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 775,
									"end": 800,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 775,
									"end": 800,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 765,
									"end": 800,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 765,
									"end": 800,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 564,
									"end": 566,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 549,
									"end": 567,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 509,
									"end": 568,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 509,
									"end": 568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 579,
									"end": 804,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 579,
									"end": 804,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 619,
									"end": 622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 651,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 646,
									"end": 652,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 643,
									"end": 644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 640,
									"end": 653,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 637,
									"end": 773,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 637,
									"end": 773,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 637,
									"end": 773,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 695,
									"end": 705,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 690,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 686,
									"end": 706,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 707,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 730,
									"end": 734,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 727,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 720,
									"end": 735,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 758,
									"end": 762,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 763,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 637,
									"end": 773,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 637,
									"end": 773,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 789,
									"end": 798,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 789,
									"end": 798,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 579,
									"end": 804,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 579,
									"end": 804,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 579,
									"end": 804,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2242,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4e018b10d1090ad7c4ec6ae6d3b76acb8b3149ddfc7146b78e06169662c115d64736f6c634300080d0033",
									".code": [
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "AE86ED89"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "F96DAE0A"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "3971A957"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "45DAA976"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "53556559"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 278,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 315,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 271,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1843,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "PUSH",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2053,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2123,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A7769746864726177476F76"
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2124,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2160,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "65726E616E63653A205769746864726177206661696C65642E00000000000000"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1809,
											"end": 2230,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1835,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 2011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2156,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2126,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2126,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2080,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2456,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2456,
											"end": 2474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2474,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2449,
											"end": 2479,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A7769746864726177557469"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634BA3C9D102BB4BA34323930BB903330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2628,
											"end": 2647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2235,
											"end": 2653,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 893,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 904,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 878,
											"end": 904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 870,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 870,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 870,
											"end": 966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 870,
											"end": 966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A65786368616E67653A2045"
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2918,
											"end": 2936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3036,
											"name": "PUSH",
											"source": 4,
											"value": "786368616E676520706572696F642068617320656E6465642E00000000000000"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3054,
											"end": 3073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2658,
											"end": 3079,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1048,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1026,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1007,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1007,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3636,
											"name": "PUSH",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3707,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054"
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "PUSH",
											"source": 4,
											"value": "6F6B656E20616C6C6F77616E636520746F6F20736D616C6C2E00000000000000"
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3789,
											"end": 3808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3393,
											"end": 3814,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1085,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1258,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4021,
											"end": 4023,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A65786368616E67653A2053"
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "656E64657227732062616C616E6365206D757374206265206772656174657220"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "7468616E206F7220657175616C20746F2074686520616D6F756E742072657175"
										},
										{
											"begin": 4222,
											"end": 4241,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4222,
											"end": 4241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4222,
											"end": 4241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 4294,
											"end": 4313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "PUSH",
											"source": 4,
											"value": "C4"
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3819,
											"end": 4366,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1479,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4611,
											"end": 4645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4681,
											"end": 4696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1454,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1435,
											"end": 1468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1435,
											"end": 1468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1435,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 4994,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054"
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5136,
											"name": "PUSH",
											"source": 4,
											"value": "72616E73666572206F66207574696C69747920746F6B656E73206661696C6564"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5172,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5153,
											"end": 5172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5146,
											"end": 5178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 5195,
											"end": 5214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4751,
											"end": 5220,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1427,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1636,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5427,
											"end": 5429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5430,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5468,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5446,
											"end": 5464,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5446,
											"end": 5464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5539,
											"name": "PUSH",
											"source": 4,
											"value": "476F7665726E616E636545786368616E6765723A3A65786368616E67653A2054"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5610,
											"name": "PUSH",
											"source": 4,
											"value": "72616E73666572206F6620676F7665726E616E636520746F6B656E7320666169"
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5646,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5627,
											"end": 5646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5627,
											"end": 5646,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5672,
											"end": 5691,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 5672,
											"end": 5691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5225,
											"end": 5697,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1585,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1754,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "6EA412B125ED242BC34C304877264761547306C2429C03D7FD1B477AA61A3F5D"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 1771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 859,
											"end": 1771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5982,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 6017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5702,
											"end": 6104,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 407,
											"end": 693,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 407,
											"end": 693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 498,
											"end": 505,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 494,
											"end": 517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 490,
											"end": 522,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 487,
											"end": 539,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 487,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 487,
											"end": 539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 525,
											"end": 537,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 487,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 487,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 613,
											"end": 644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 645,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 593,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 593,
											"end": 663,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 659,
											"end": 660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 649,
											"end": 661,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 593,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 593,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 682,
											"end": 687,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 407,
											"end": 693,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 407,
											"end": 693,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 1054,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 698,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 882,
											"end": 903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 882,
											"end": 903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 919,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 919,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 919,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 912,
											"end": 942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 958,
											"end": 976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 698,
											"end": 1054,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1059,
											"end": 1243,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1059,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1150,
											"end": 1202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1200,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1202,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1150,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1237,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1243,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1527,
											"end": 1804,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1527,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1633,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1645,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1650,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1754,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1756,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1714,
											"end": 1774,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1772,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"exchange(uint256)": "53556559",
							"governanceToken()": "f96dae0a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"utilityToken()": "ae86ed89",
							"withdrawGovernance()": "3971a957",
							"withdrawUtility()": "45daa976"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governanceToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"utilityToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holdingAccount_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Exchanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUtility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceExchanger.sol\":\"GovernanceExchanger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceExchanger.sol\":{\"keccak256\":\"0xd4edbaa520203a91378a9f549954cc510323d6d73c664c4db35271438a073724\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://949349dbdaf8d3605c850bdd685edf4da51677a4b74b4731e522440323819eac\",\"dweb:/ipfs/QmQyruyiv22fcSfENguAFecHm6VL2EMQYGvFMmAF21911D\"]},\"contracts/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"contracts/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 190,
								"contract": "contracts/GovernanceExchanger.sol:GovernanceExchanger",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"contracts/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 190,
								"contract": "contracts/openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GovernanceExchanger.sol": {
				"ast": {
					"absolutePath": "contracts/GovernanceExchanger.sol",
					"exportedSymbols": {
						"Context": [
							387
						],
						"GovernanceExchanger": [
							182
						],
						"IERC20": [
							365
						],
						"Ownable": [
							287
						]
					},
					"id": 183,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/access/Ownable.sol",
							"file": "./openzeppelin/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 288,
							"src": "68:53:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 366,
							"src": "123:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 287,
										"src": "216:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:0"
								}
							],
							"canonicalName": "GovernanceExchanger",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182,
								287,
								387
							],
							"name": "GovernanceExchanger",
							"nameLocation": "193:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 7,
									"mutability": "immutable",
									"name": "governanceToken",
									"nameLocation": "256:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "231:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "231:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ae86ed89",
									"id": 9,
									"mutability": "immutable",
									"name": "utilityToken",
									"nameLocation": "303:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "278:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "immutable",
									"name": "holdingAccount",
									"nameLocation": "348:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "322:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "immutable",
									"name": "endDate",
									"nameLocation": "395:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "369:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "6ea412b125ed242bc34c304877264761547306c2429c03d7fd1b477aa61a3f5d",
									"id": 19,
									"name": "Exchanged",
									"nameLocation": "488:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "523:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "515:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:33:0"
									},
									"src": "482:49:0"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "625:183:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "636:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "governanceToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "654:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "636:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "636:34:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "utilityToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "681:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 33,
														"name": "utilityToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "696:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "681:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "681:28:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "holdingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "720:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "holdingAccount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "737:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "720:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "720:32:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "endDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 41,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "775:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "775:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3134",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1209600_by_1",
																"typeString": "int_const 1209600"
															},
															"value": "14"
														},
														"src": "775:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "765:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "765:35:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "governanceToken_",
												"nameLocation": "559:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "551:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "utilityToken_",
												"nameLocation": "585:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "577:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "holdingAccount_",
												"nameLocation": "608:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "600:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:74:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:0:0"
									},
									"scope": 182,
									"src": "539:269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "859:912:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 54,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "878:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "878:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 56,
																"name": "endDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "878:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2045786368616e676520706572696f642068617320656e6465642e",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5ab1db43b51bed1573d7acaccaa920a3c467fa0c2c2f0a51bcabfdf332c3109",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Exchange period has ended.\""
															},
															"value": "GovernanceExchanger::exchange: Exchange period has ended."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5ab1db43b51bed1573d7acaccaa920a3c467fa0c2c2f0a51bcabfdf332c3109",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Exchange period has ended.\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "870:96:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "995:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "987:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 67,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1038:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1038:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 71,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1058:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																		"typeString": "contract GovernanceExchanger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																		"typeString": "contract GovernanceExchanger"
																	}
																],
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1050:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 69,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1050:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 64,
																	"name": "utilityToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1014:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 63,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1007:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1007:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$365",
																"typeString": "contract IERC20"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1007:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "987:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 76,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1093:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 77,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1106:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1093:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a20546f6b656e20616c6c6f77616e636520746f6f20736d616c6c2e",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89b47b1188a905baa9714ed0c529ed28ab596ebead4351020b5b8f081506a32a",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Token allowance too small.\""
															},
															"value": "GovernanceExchanger::exchange: Token allowance too small."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89b47b1188a905baa9714ed0c529ed28ab596ebead4351020b5b8f081506a32a",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Token allowance too small.\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1085:89:0"
											},
											{
												"assignments": [
													83
												],
												"declarations": [
													{
														"constant": false,
														"id": 83,
														"mutability": "mutable",
														"name": "utilityTokenBalance",
														"nameLocation": "1195:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1187:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 82,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1248:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1248:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 85,
																	"name": "utilityToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1224:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 84,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1217:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$365",
																"typeString": "contract IERC20"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "1217:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1187:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 93,
																"name": "utilityTokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1280:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 94,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1280:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a2053656e64657227732062616c616e6365206d7573742062652067726561746572207468616e206f7220657175616c20746f2074686520616d6f756e74207265717565737465642e",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1311:104:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bff9faa4a6496ad5e37150c811e025b935c3c179054796cc0058ac8f679449d0",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\""
															},
															"value": "GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bff9faa4a6496ad5e37150c811e025b935c3c179054796cc0058ac8f679449d0",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Sender's balance must be greater than or equal to the amount requested.\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:144:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1272:144:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 104,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1469:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1469:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 106,
																	"name": "holdingAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1481:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 107,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1497:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 101,
																			"name": "utilityToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "1442:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 100,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1435:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1435:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$365",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 346,
																"src": "1435:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1435:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a205472616e73666572206f66207574696c69747920746f6b656e73206661696c65642e",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbb8362d043b12019e6e4a5f50048f4bb20d95a35d2ee15aa80e85fc66f43c28",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\""
															},
															"value": "GovernanceExchanger::exchange: Transfer of utility tokens failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbb8362d043b12019e6e4a5f50048f4bb20d95a35d2ee15aa80e85fc66f43c28",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Transfer of utility tokens failed.\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1427:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1427:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1427:147:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 117,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1626:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 119,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1638:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 114,
																			"name": "governanceToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "1600:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 113,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1593:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1593:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$365",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "1593:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1593:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a65786368616e67653a205472616e73666572206f6620676f7665726e616e636520746f6b656e73206661696c65642e",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1647:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbca032c81e656114920bebf541dfdf0acb88cf41d0859105f44bf60b0753ee1",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\""
															},
															"value": "GovernanceExchanger::exchange: Transfer of governance tokens failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbca032c81e656114920bebf541dfdf0acb88cf41d0859105f44bf60b0753ee1",
																"typeString": "literal_string \"GovernanceExchanger::exchange: Transfer of governance tokens failed.\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1585:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1585:133:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1744:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1744:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1756:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 124,
														"name": "Exchanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "1729:34:0"
											}
										]
									},
									"functionSelector": "53556559",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exchange",
									"nameLocation": "825:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "842:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "834:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:16:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:0:0"
									},
									"scope": 182,
									"src": "816:955:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1826:185:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 141,
																	"name": "holdingAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1876:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 148,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1934:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																						"typeString": "contract GovernanceExchanger"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																						"typeString": "contract GovernanceExchanger"
																					}
																				],
																				"id": 147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1926:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 146,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1926:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1926:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 143,
																					"name": "governanceToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 7,
																					"src": "1899:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 142,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "1892:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1892:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$365",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 304,
																		"src": "1892:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 138,
																			"name": "governanceToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "1850:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 137,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1843:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1843:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$365",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "1843:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1843:98:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a7769746864726177476f7665726e616e63653a205769746864726177206661696c65642e",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1943:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1978c4d2d1c163c1d7217d521c2059a210c485469b8adb9d498912af738ef846",
																"typeString": "literal_string \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\""
															},
															"value": "GovernanceExchanger::withdrawGovernance: Withdraw failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1978c4d2d1c163c1d7217d521c2059a210c485469b8adb9d498912af738ef846",
																"typeString": "literal_string \"GovernanceExchanger::withdrawGovernance: Withdraw failed.\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1835:168:0"
											}
										]
									},
									"functionSelector": "3971a957",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 229,
												"src": "1816:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1816:9:0"
										}
									],
									"name": "withdrawGovernance",
									"nameLocation": "1788:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:2:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1826:0:0"
									},
									"scope": 182,
									"src": "1779:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2063:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 166,
																	"name": "holdingAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2110:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 173,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2165:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																						"typeString": "contract GovernanceExchanger"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_GovernanceExchanger_$182",
																						"typeString": "contract GovernanceExchanger"
																					}
																				],
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2157:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 171,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2157:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2157:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 168,
																					"name": "utilityToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 9,
																					"src": "2133:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 167,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "2126:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2126:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$365",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 304,
																		"src": "2126:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2126:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 163,
																			"name": "utilityToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "2087:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 162,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "2080:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$365_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2080:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$365",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "2080:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2080:92:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476f7665726e616e636545786368616e6765723a3a77697468647261775574696c6974793a205769746864726177206661696c65642e",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f897ed845dce9d54746ce5d1a81ef106dc440a14d2eb5081ae5b9c66555a1db0",
																"typeString": "literal_string \"GovernanceExchanger::withdrawUtility: Withdraw failed.\""
															},
															"value": "GovernanceExchanger::withdrawUtility: Withdraw failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f897ed845dce9d54746ce5d1a81ef106dc440a14d2eb5081ae5b9c66555a1db0",
																"typeString": "literal_string \"GovernanceExchanger::withdrawUtility: Withdraw failed.\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2072:159:0"
											}
										]
									},
									"functionSelector": "45daa976",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 229,
												"src": "2053:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2053:9:0"
										}
									],
									"name": "withdrawUtility",
									"nameLocation": "2028:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2043:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:0:0"
									},
									"scope": 182,
									"src": "2019:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 183,
							"src": "184:2058:0",
							"usedErrors": []
						}
					],
					"src": "40:2202:0"
				},
				"id": 0
			},
			"contracts/openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							387
						],
						"Ownable": [
							287
						]
					},
					"id": 288,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 288,
							"sourceUnit": 388,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 387,
										"src": "668:7:1"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 287,
							"linearizedBaseContracts": [
								287,
								387
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 287,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 196,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 201,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 200,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 287,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 212,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 190,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 287,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 219,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 227,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 229,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 229,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 287,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 253,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 261,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 248,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 229,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 287,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"id": 274,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 190,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 276,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 277,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 281,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 282,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 280,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 287,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 288,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"contracts/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							365
						]
					},
					"id": 366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 289,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 365,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 365,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 365,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 365,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 365,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 365,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 355,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 364,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 366,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"contracts/openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							387
						]
					},
					"id": 388,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 373,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 372,
												"id": 375,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 387,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 382,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 381,
												"id": 384,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 387,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 388,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}